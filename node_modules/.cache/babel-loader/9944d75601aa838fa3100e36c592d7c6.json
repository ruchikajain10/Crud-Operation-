{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reactjs\\\\Crud\\\\src\\\\components\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getForm } from '../redux/actions/actionCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  _s();\n\n  const data = useSelector(state => state.Reducers.register);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit2 = data => dispatch(getForm(data));\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit2),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(\"fullName\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }, this), errors.fullName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" name is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" email is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(\"phone\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Phone is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register(\"password\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Password is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Country\",\n          ...register('address.country', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), [data].map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"+i4z5XMtsI3PaQ+z10SwVSfKCd0=\", false, function () {\n  return [useSelector, useForm, useDispatch];\n});\n\n_c = Form;\n{\n  /* <form onSubmit={handleSubmit(onSubmit2)}>\n  <div>\n   <label> Full Name :-</label>\n  <input {...register('fullName', { required: true })} />\n  </div>\n  {errors.fullName && <p> name is required.</p>}\n  <div>\n   <label> Age :-</label>\n  <input {...register('age', { pattern: /\\d+/ ,required: true })} />\n  </div>\n  {errors.age && <p>Please enter valid number for age.</p>}\n  <input type=\"submit\" />\n  </form> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Reactjs/Crud/src/components/form.js"],"names":["React","useForm","useDispatch","useSelector","getForm","Form","data","state","Reducers","register","handleSubmit","formState","errors","onSubmit2","dispatch","required","fullName","email","phone","password","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,gCAAxB;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAMC,IAAI,GAACH,WAAW,CAACI,KAAK,IAAEA,KAAK,CAACC,QAAN,CAAeC,QAAvB,CAAtB;AACA,QAAM;AAAEA,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAqDX,OAAO,EAAlE;;AACA,QAAMY,SAAS,GAAIP,IAAD,IAAUQ,QAAQ,CAACV,OAAO,CAACE,IAAD,CAAR,CAApC;;AACA,QAAMQ,QAAQ,GAACZ,WAAW,EAA1B;AACF,sBACE;AAAA,4BAEC;AAAM,MAAA,QAAQ,EAAEQ,YAAY,CAACG,SAAD,CAA5B;AAAA,8BACI;AAAA,gCACL;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,aAA0BJ,QAAQ,CAAC,UAAD,EAAa;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFK,EAGJH,MAAM,CAACI,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMH;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAA,aAAyBP,QAAQ,CAAC,OAAD,EAAU;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAAV;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGH,MAAM,CAACK,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA,cANG,eAWF;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,aAA0BR,QAAQ,CAAC,OAAD,EAAU;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAAV;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGEH,MAAM,CAACM,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXE,eAiBH;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,aAA6BT,QAAQ,CAAC,UAAD,EAAa;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGH,MAAM,CAACO,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBG,eAuBH;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,eAA/B;AAAA,aAAoDV,QAAQ,CAAC,iBAAD,EAAoB;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAApB;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBG,eA+BH;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cA/BG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAmCA;AAAA;AAAA;AAAA;AAAA,YAnCA,EAqCO,CAACT,IAAD,EAAOc,GAAP,CAAW,CAACd,IAAD,EAAMe,KAAN,KAAc;AACrB,0BACO;AAAA,gCACH,mBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAA,kCACI;AAAA,sBAAIf,IAAI,CAACU;AAAT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIV,IAAI,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAIX,IAAI,CAACY;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAIZ,IAAI,CAACa;AAAT;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,cADP;AAcH,KAfD,CArCP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CA/DM;;GAAMd,I;UACEF,W,EACgDF,O,EAE5CC,W;;;KAJNG,I;AAsEb;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGW","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getForm } from '../redux/actions/actionCreator'\n\n\nexport const Form = () => {\n    const data=useSelector(state=>state.Reducers.register)\n    const { register, handleSubmit, formState: { errors }, } = useForm();\n    const onSubmit2 = (data) => dispatch(getForm(data))\n    const dispatch=useDispatch()\n  return (\n    <div>\n\n     <form onSubmit={handleSubmit(onSubmit2)}>\n         <div >\n    <label htmlFor=\"fullName\">Full Name</label>\n    <input type=\"text\"    {...register(\"fullName\", { required: true })} />\n    {errors.fullName && <p> name is required.</p>}\n  </div>\n  <div >\n    <label htmlFor=\"email\">Email address</label>\n    <input type=\"email\"  {...register(\"email\", { required: true })} />\n    {errors.email && <p> email is required.</p>}\n  </div>\n   <div >\n    <label htmlFor=\"phone\">Phone Number</label>\n    <input type=\"text\"    {...register(\"phone\", { required: true })} />\n    {errors.phone && <p> Phone is required.</p>}\n\n  </div>\n  <div >\n    <label htmlFor=\"password\">Password</label>\n    <input type=\"password\"   {...register(\"password\", { required: true })} />\n    {errors.password && <p> Password is required.</p>}\n\n  </div>\n  <div >\n    <label htmlFor=\"address\">Address</label>\n    <input type=\"text\" placeholder='Enter Country'  {...register('address.country', { required: true })} />\n    {/* {errors.address && <p> Country is required.</p>} */}\n    {/* <input type=\"text\" placeholder='Enter state'  {...register(\"address.state\", { required: true })} />\n    {errors.address && <p> state is required.</p>} */}\n\n  </div>\n  <input type=\"submit\" />\n    </form>\n    <br/>\n       {\n           [data].map((data,index)=>{\n               return(\n                      <div>                    \n                   <div key={index}></div>\n                   <div> \n                       <p>{data.fullName}</p>\n                       <p>{data.email}</p>\n                       <p>{data.phone}</p>\n                       <p>{data.password}</p>\n                       {/* <p>{data.address.country}</p> */}\n                       {/* <p>{data.state}</p> */}\n                   \n                   </div>\n                   </div>\n               )\n           })\n       }\n       \n    </div>\n  )\n}\n\n\n\n\n\n\n{/* <form onSubmit={handleSubmit(onSubmit2)}>\n<div>\n\n <label> Full Name :-</label>\n\n<input {...register('fullName', { required: true })} />\n</div>\n{errors.fullName && <p> name is required.</p>}\n<div>\n\n <label> Age :-</label>\n<input {...register('age', { pattern: /\\d+/ ,required: true })} />\n</div>\n{errors.age && <p>Please enter valid number for age.</p>}\n<input type=\"submit\" />\n</form> */}"]},"metadata":{},"sourceType":"module"}