{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reactjs\\\\Crud\\\\src\\\\components\\\\data.js\",\n    _s = $RefreshSig$();\n\nimport './Data.css';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPost, deletePost, addPost, updatePost } from '../redux/actions/actionCreator';\nimport { ImageModel } from './imageModel';\nimport { useState } from 'react'; // import { Link } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = () => {\n  _s();\n\n  const [addValue, SetAddValue] = useState(\"\");\n  let [post, Setpost] = useState([]);\n  const [blankError, SetBlankError] = useState(\"\");\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const posts = useSelector(state => state.Reducers.posts);\n  const error = useSelector(state => state.Reducers.error);\n  const [test, Settest] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const deletePosts = id => {\n    console.log(\"clicked\", id);\n    dispatch(deletePost(id));\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    dispatch(getPost()); // console.log(\"aaaaaaa\",test)\n  }, []); // useEffect(() => {\n  //   console.log(\"useEffect\")\n  //   updateModal()\n  //   // console.log(\"aaaaaaa\",test)\n  // }, [posts])\n\n  const addClick = data => {\n    const a = data;\n\n    if (a === \"\") {\n      SetBlankError(\"Please write Something\");\n    } else {\n      dispatch(addPost(data));\n      SetAddValue(\"\");\n    }\n  };\n\n  const openModal = id => {\n    const post2 = posts.find(post1 => post1.id === id);\n    Setpost(post = post2);\n    setIsVisibleModal(true);\n    console.log(\"clicked image\");\n  };\n\n  const closeModal = () => {\n    setIsVisibleModal(false);\n    console.log(\"close image\");\n  };\n\n  const handleChange = e => {\n    SetAddValue(e.target.value);\n  };\n\n  const updateModal = (id, name) => {\n    console.log(id, name);\n    dispatch(updatePost(id, name));\n    setIsVisibleModal(false);\n  }; // const handleChange2=(e,id)=>{\n  // // console.log(\"handle2\",e.target.value)\n  // // Settest(e.target.value)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \" Crud Operation through Api Axios with React-Redux-Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this), isVisibleModal && /*#__PURE__*/_jsxDEV(ImageModel, {\n      updateModal: updateModal,\n      post: post,\n      isVisibleModal: isVisibleModal,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          color: \"red\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: addValue,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addClick(addValue),\n          children: \"  Add!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", blankError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: () => openModal(post.id),\n                src: post.avatar,\n                height: 200,\n                width: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: post.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this), \" : \", post.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deletePosts(post.id),\n                children: \" Delete!!!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Data, \"FyP2eOlPfyX2gtEpM4l7Yhwl/C4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["C:/Reactjs/Crud/src/components/data.js"],"names":["React","useEffect","useDispatch","useSelector","getPost","deletePost","addPost","updatePost","ImageModel","useState","Data","addValue","SetAddValue","post","Setpost","blankError","SetBlankError","isVisibleModal","setIsVisibleModal","posts","state","Reducers","error","test","Settest","dispatch","deletePosts","id","console","log","addClick","data","a","openModal","post2","find","post1","closeModal","handleChange","e","target","value","updateModal","name","textAlign","color","map","index","avatar"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAiBC,UAAjB,EAA4BC,OAA5B,EAAoCC,UAApC,QAAsD,gCAAtD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBH,QAAQ,CAAC,EAAD,CAArC;AACA,MAAI,CAACI,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM,CAACM,UAAD,EAAYC,aAAZ,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACQ,cAAD,EAAgBC,iBAAhB,IAAmCT,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAMU,KAAK,GAAChB,WAAW,CAACiB,KAAK,IAAGA,KAAK,CAACC,QAAN,CAAeF,KAAxB,CAAvB;AACA,QAAMG,KAAK,GAACnB,WAAW,CAACiB,KAAK,IAAGA,KAAK,CAACC,QAAN,CAAeC,KAAxB,CAAvB;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAef,QAAQ,CAAC,EAAD,CAA7B;AAEA,QAAMgB,QAAQ,GAACvB,WAAW,EAA1B;;AAEA,QAAMwB,WAAW,GAAEC,EAAD,IAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,EAAtB;AACCF,IAAAA,QAAQ,CAACpB,UAAU,CAACsB,EAAD,CAAX,CAAR;AACF,GAHD;;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAJ,IAAAA,QAAQ,CAACrB,OAAO,EAAR,CAAR,CAHc,CAId;AAED,GANQ,EAMN,EANM,CAAT,CAfmB,CAsBnB;AACA;AAEA;AACA;AAEA;;AAEA,QAAM0B,QAAQ,GAAEC,IAAD,IAAQ;AACrB,UAAMC,CAAC,GAACD,IAAR;;AACA,QAAGC,CAAC,KAAG,EAAP,EAAU;AACRhB,MAAAA,aAAa,CAAC,wBAAD,CAAb;AACD,KAFD,MAGI;AACFS,MAAAA,QAAQ,CAACnB,OAAO,CAACyB,IAAD,CAAR,CAAR;AACAnB,MAAAA,WAAW,CAAC,EAAD,CAAX;AAED;AACF,GAVD;;AAWA,QAAMqB,SAAS,GAAEN,EAAD,IAAM;AACpB,UAAMO,KAAK,GAACf,KAAK,CAACgB,IAAN,CAAYC,KAAD,IAASA,KAAK,CAACT,EAAN,KAAWA,EAA/B,CAAZ;AACAb,IAAAA,OAAO,CAACD,IAAI,GAACqB,KAAN,CAAP;AACAhB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GALD;;AAMA,QAAMQ,UAAU,GAAC,MAAI;AACnBnB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAHD;;AAIA,QAAMS,YAAY,GAAEC,CAAD,IAAK;AACtB3B,IAAAA,WAAW,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAC,CAACf,EAAD,EAAIgB,IAAJ,KAAW;AAC3Bf,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAegB,IAAf;AACAlB,IAAAA,QAAQ,CAAClB,UAAU,CAACoB,EAAD,EAAIgB,IAAJ,CAAX,CAAR;AACAzB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJD,CAvDmB,CA4DnB;AAEA;AACA;AAEA;;;AAEE,sBACE;AAAA,4BACG;AAAI,MAAA,KAAK,EAAE;AAAC0B,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAII3B,cAAc,iBACd,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEyB,WAAzB;AAAqC,MAAA,IAAI,EAAE7B,IAA3C;AAAiD,MAAA,cAAc,EAAEI,cAAjE;AAAiF,MAAA,UAAU,EAAEoB;AAA7F;AAAA;AAAA;AAAA;AAAA,YALJ,eAOE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAC,QAAX;AAAoBC,UAAAA,KAAK,EAAC;AAA1B,SAAZ;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAElC,QAA1B;AAAoC,UAAA,QAAQ,EAAE2B;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,OAAO,EAAE,MAAIR,QAAQ,CAACnB,QAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAE2D;AAAA;AAAA;AAAA;AAAA,gBAF3D,eAGA;AAAA,0BAAQI,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOIO,KAAK,gBACL;AAAI,QAAA,KAAK,EAAE;AAACuB,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA,wBAA4BvB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,GAELH,KAAK,CAAC2B,GAAN,CAAU,CAACjC,IAAD,EAAMkC,KAAN,KAAc;AACtB,4BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,mCACE;AAAA,sCACE;AAAK,gBAAA,OAAO,EAAE,MAAId,SAAS,CAACpB,IAAI,CAACc,EAAN,CAA3B;AAAsC,gBAAA,GAAG,EAAEd,IAAI,CAACmC,MAAhD;AAAyD,gBAAA,MAAM,EAAE,GAAjE;AAAsE,gBAAA,KAAK,EAAE;AAA7E;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,6CAAI;AAAA,4BAAInC,IAAI,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,wBAAJ,SAAwBd,IAAI,CAAC8B,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAIE;AAAQ,gBAAA,OAAO,EAAE,MAAIjB,WAAW,CAACb,IAAI,CAACc,EAAN,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAUoB,KAAV;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAdD,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAvGD;;GAAMrC,I;UAKMP,W,EACAA,W,EAGGD,W;;;KATTQ,I;AAyGN,eAAeA,IAAf","sourcesContent":["import './Data.css'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPost,deletePost,addPost,updatePost } from '../redux/actions/actionCreator'\nimport { ImageModel } from './imageModel'\nimport { useState } from 'react'\n// import { Link } from 'react-router-dom';\n\nconst Data = () => {\nconst [addValue,SetAddValue]=useState(\"\")\nlet [post,Setpost]=useState([])\nconst [blankError,SetBlankError]=useState(\"\")\nconst [isVisibleModal,setIsVisibleModal]=useState(false)\nconst posts=useSelector(state=> state.Reducers.posts)\nconst error=useSelector(state=> state.Reducers.error)\nconst [test,Settest]=useState(\"\")\n   \nconst dispatch=useDispatch()\n\nconst deletePosts=(id)=>{\n  console.log(\"clicked\",id)\n   dispatch(deletePost(id))\n}\nuseEffect(() => {\n  console.log(\"useEffect\")\n  \n  dispatch(getPost())\n  // console.log(\"aaaaaaa\",test)\n\n}, [])\n// useEffect(() => {\n//   console.log(\"useEffect\")\n  \n//   updateModal()\n//   // console.log(\"aaaaaaa\",test)\n\n// }, [posts])\n\nconst addClick=(data)=>{\n  const a=data\n  if(a===\"\"){\n    SetBlankError(\"Please write Something\")\n  }\n  else{\n    dispatch(addPost(data))\n    SetAddValue(\"\")\n    \n  }\n}\nconst openModal=(id)=>{\n  const post2=posts.find((post1)=>post1.id===id)\n  Setpost(post=post2)\n  setIsVisibleModal(true)\n  console.log(\"clicked image\")\n}\nconst closeModal=()=>{\n  setIsVisibleModal(false)\n  console.log(\"close image\")\n}\nconst handleChange=(e)=>{\n  SetAddValue(e.target.value)\n}\n\nconst updateModal=(id,name)=>{\n  console.log(id,name)\n  dispatch(updatePost(id,name))\n  setIsVisibleModal(false)\n}\n// const handleChange2=(e,id)=>{\n\n// // console.log(\"handle2\",e.target.value)\n// // Settest(e.target.value)\n\n// }\n\n  return (\n    <div>\n       <h2 style={{textAlign:\"center\"}}> Crud Operation through Api Axios with React-Redux-Hooks</h2>\n      {/* <Link to=\"/form\">Form</Link> */}\n      {\n        isVisibleModal&&\n        <ImageModel updateModal={updateModal}post={post} isVisibleModal={isVisibleModal} closeModal={closeModal} />\n      }\n      <div>\n        <div style={{textAlign:\"center\",color:\"red\"}}>\n        <input type=\"text\" value={addValue} onChange={handleChange} />\n        <button onClick={()=>addClick(addValue)} >  Add!!!</button><br/>\n        <span> {blankError}</span>\n        </div>\n        {\n          error ? \n          <h1 style={{color:\"red\"}}> {error}</h1> :\n          posts.map((post,index)=>{\n            return(\n              <div className=\"column\" >\n              <div className=\"row\"></div>\n              <div key={index}>\n                <div>\n                  <img onClick={()=>openModal(post.id)} src={post.avatar}  height={200} width={200}/>\n                  <p> <b>{post.id}</b> : {post.name}</p>\n                  {/* <input type=\"text\" value={test} onChange={handleChange2}></input> */}\n                  <button onClick={()=>deletePosts(post.id)}> Delete!!!</button>\n                </div>\n              </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Data"]},"metadata":{},"sourceType":"module"}