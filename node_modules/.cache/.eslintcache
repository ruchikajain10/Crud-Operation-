[{"C:\\Reactjs\\Crud\\src\\index.js":"1","C:\\Reactjs\\Crud\\src\\reportWebVitals.js":"2","C:\\Reactjs\\Crud\\src\\App.js":"3","C:\\Reactjs\\Crud\\src\\redux\\store\\store.js":"4","C:\\Reactjs\\Crud\\src\\components\\data.js":"5","C:\\Reactjs\\Crud\\src\\components\\form.js":"6","C:\\Reactjs\\Crud\\src\\redux\\reducers\\combineReducers.js":"7","C:\\Reactjs\\Crud\\src\\components\\imageModel.js":"8","C:\\Reactjs\\Crud\\src\\redux\\actions\\actionCreator.js":"9","C:\\Reactjs\\Crud\\src\\redux\\reducers\\reducers.js":"10"},{"size":625,"mtime":1649326972000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1649322110000,"results":"13","hashOfConfig":"12"},{"size":641,"mtime":1649677446000,"results":"14","hashOfConfig":"12"},{"size":218,"mtime":1649327404000,"results":"15","hashOfConfig":"12"},{"size":3071,"mtime":1651573500089,"results":"16","hashOfConfig":"12"},{"size":2732,"mtime":1651573612798,"results":"17","hashOfConfig":"12"},{"size":157,"mtime":1649327312000,"results":"18","hashOfConfig":"12"},{"size":1008,"mtime":1649414244000,"results":"19","hashOfConfig":"12"},{"size":2334,"mtime":1651573505850,"results":"20","hashOfConfig":"12"},{"size":1251,"mtime":1651573622663,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fqkqlo",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Reactjs\\Crud\\src\\index.js",[],[],"C:\\Reactjs\\Crud\\src\\reportWebVitals.js",[],[],"C:\\Reactjs\\Crud\\src\\App.js",[],[],"C:\\Reactjs\\Crud\\src\\redux\\store\\store.js",[],[],"C:\\Reactjs\\Crud\\src\\components\\data.js",["55","56","57","58"],[],"import './Data.css'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPost,deletePost,addPost,updatePost } from '../redux/actions/actionCreator'\nimport { ImageModel } from './imageModel'\nimport { useState } from 'react'\n// import { Link } from 'react-router-dom';\n\nconst Data = () => {\nconst [addValue,SetAddValue]=useState(\"\")\nlet [post,Setpost]=useState([])\nconst [blankError,SetBlankError]=useState(\"\")\nconst [isVisibleModal,setIsVisibleModal]=useState(false)\nconst posts=useSelector(state=> state.Reducers.posts)\nconst error=useSelector(state=> state.Reducers.error)\nconst [test,Settest]=useState(\"\")\n   \nconst dispatch=useDispatch()\n\nconst deletePosts=(id)=>{\n  console.log(\"clicked\",id)\n   dispatch(deletePost(id))\n}\nuseEffect(() => {\n  console.log(\"useEffect\")\n  \n  dispatch(getPost())\n  // console.log(\"aaaaaaa\",test)\n\n}, [])\n// useEffect(() => {\n//   console.log(\"useEffect\")\n  \n//   updateModal()\n//   // console.log(\"aaaaaaa\",test)\n\n// }, [posts])\n\nconst addClick=(data)=>{\n  const a=data\n  if(a===\"\"){\n    SetBlankError(\"Please write Something\")\n  }\n  else{\n    dispatch(addPost(data))\n    SetAddValue(\"\")\n    \n  }\n}\nconst openModal=(id)=>{\n  const post2=posts.find((post1)=>post1.id===id)\n  Setpost(post=post2)\n  setIsVisibleModal(true)\n  console.log(\"clicked image\")\n}\nconst closeModal=()=>{\n  setIsVisibleModal(false)\n  console.log(\"close image\")\n}\nconst handleChange=(e)=>{\n  SetAddValue(e.target.value)\n}\n\nconst updateModal=(id,name)=>{\n  console.log(id,name)\n  dispatch(updatePost(id,name))\n  setIsVisibleModal(false)\n}\n// const handleChange2=(e,id)=>{\n\n// // console.log(\"handle2\",e.target.value)\n// // Settest(e.target.value)\n\n// }\n\n  return (\n    <div>\n       <h2 style={{textAlign:\"center\"}}> Crud Operation through Api Axios with React-Redux-Hooks</h2>\n      {/* <Link to=\"/form\">Form</Link> */}\n      {\n        isVisibleModal&&\n        <ImageModel updateModal={updateModal}post={post} isVisibleModal={isVisibleModal} closeModal={closeModal} />\n      }\n      <div>\n        <div style={{textAlign:\"center\",color:\"red\"}}>\n        <input type=\"text\" value={addValue} onChange={handleChange} />\n        <button onClick={()=>addClick(addValue)} >  Add!!!</button><br/>\n        <span> {blankError}</span>\n        </div>\n        {\n          error ? \n          <h1 style={{color:\"red\"}}> {error}</h1> :\n          posts.map((post,index)=>{\n            return(\n              <div className=\"column\" >\n              <div className=\"row\"></div>\n              <div key={index}>\n                <div>\n                  <img onClick={()=>openModal(post.id)} src={post.avatar}  height={200} width={200}/>\n                  <p> <b>{post.id}</b> : {post.name}</p>\n                  {/* <input type=\"text\" value={test} onChange={handleChange2}></input> */}\n                  <button onClick={()=>deletePosts(post.id)}> Delete!!!</button>\n                </div>\n              </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Data","C:\\Reactjs\\Crud\\src\\components\\form.js",["59"],[],"import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getForm } from '../redux/actions/actionCreator'\n\n\nexport const Form = () => {\n    const data=useSelector(state=>state.Reducers.register)\n    const { register, handleSubmit, formState: { errors }, } = useForm();\n    const onSubmit2 = (data) => dispatch(getForm(data))\n    const dispatch=useDispatch()\n  return (\n    <div>\n\n     <form onSubmit={handleSubmit(onSubmit2)}>\n         <div >\n    <label htmlFor=\"fullName\">Full Name</label>\n    <input type=\"text\"    {...register(\"fullName\", { required: true })} />\n    {errors.fullName && <p> name is required.</p>}\n  </div>\n  <div >\n    <label htmlFor=\"email\">Email address</label>\n    <input type=\"email\"  {...register(\"email\", { required: true })} />\n    {errors.email && <p> email is required.</p>}\n  </div>\n   <div >\n    <label htmlFor=\"phone\">Phone Number</label>\n    <input type=\"text\"    {...register(\"phone\", { required: true })} />\n    {errors.phone && <p> Phone is required.</p>}\n\n  </div>\n  <div >\n    <label htmlFor=\"password\">Password</label>\n    <input type=\"password\"   {...register(\"password\", { required: true })} />\n    {errors.password && <p> Password is required.</p>}\n\n  </div>\n  <div >\n    <label htmlFor=\"address\">Address</label>\n    <input type=\"text\" placeholder='Enter Country'  {...register('address.country', { required: true })} />\n    {/* {errors.address && <p> Country is required.</p>} */}\n    {/* <input type=\"text\" placeholder='Enter state'  {...register(\"address.state\", { required: true })} />\n    {errors.address && <p> state is required.</p>} */}\n\n  </div>\n  <input type=\"submit\" />\n    </form>\n    <br/>\n       {\n           [data].map((data,index)=>{\n               return(\n                      <div>                    \n                   <div key={index}></div>\n                   <div> \n                       <p>{data.fullName}</p>\n                       <p>{data.email}</p>\n                       <p>{data.phone}</p>\n                       <p>{data.password}</p>\n                       {/* <p>{data.address.country}</p> */}\n                       {/* <p>{data.state}</p> */}\n                   \n                   </div>\n                   </div>\n               )\n           })\n       }\n       \n    </div>\n  )\n}\n\n\n\n\n\n\n{/* <form onSubmit={handleSubmit(onSubmit2)}>\n<div>\n\n <label> Full Name :-</label>\n\n<input {...register('fullName', { required: true })} />\n</div>\n{errors.fullName && <p> name is required.</p>}\n<div>\n\n <label> Age :-</label>\n<input {...register('age', { pattern: /\\d+/ ,required: true })} />\n</div>\n{errors.age && <p>Please enter valid number for age.</p>}\n<input type=\"submit\" />\n</form> */}","C:\\Reactjs\\Crud\\src\\redux\\reducers\\combineReducers.js",[],[],"C:\\Reactjs\\Crud\\src\\components\\imageModel.js",[],[],"C:\\Reactjs\\Crud\\src\\redux\\actions\\actionCreator.js",[],[],"C:\\Reactjs\\Crud\\src\\redux\\reducers\\reducers.js",["60"],[],"\nconst initialState={\n    posts:[],\n    error:\"\",\n    register:[],\n}\nconst Reducers = (state = initialState,action) => {\n    console.log(666666666, action.type);\n    console.log(666611111, action.payload);\n\n    switch (action.type) {\n      case \"GET_POST\":\n        return { ...state, posts: action.payload };\n\n      case \"ADD_POST\":\n        return { ...state, posts: state.posts.concat(action.payload) };\n\n      case \"DELETE_POST\":\n        const deletedPost = state.posts.filter((post) => {\n          if (post.id !== action.payload) {\n            return post;\n          }\n        });\n        return { ...state, posts: deletedPost };\n\n      case \"UPDATE_POSTS\":\n        const post = state.posts.find((post) => post.id === action.payload.id);\n        post.name = action.payload.name;\n        const post2 = state.posts.map((post3) => {\n          if (post3.id === action.payload.id) {\n            return post;\n          } else {\n            return post3;\n          }\n        });\n        return { ...state, posts: post2 };\n        \n      case \"GET_ERROR\":\n        return { ...state, error: action.payload };\n      case \"GET_FORM\":\n        return { ...state, register: action.payload };\n      default:\n        return state;\n    }\n}\n\nexport default Reducers;",{"ruleId":"61","severity":1,"message":"62","line":17,"column":8,"nodeType":"63","messageId":"64","endLine":17,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":17,"column":13,"nodeType":"63","messageId":"64","endLine":17,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":31,"column":4,"nodeType":"68","endLine":31,"endColumn":6,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":100,"column":19,"nodeType":"72","endLine":100,"endColumn":102},{"ruleId":"73","severity":1,"message":"74","line":77,"column":1,"nodeType":"75","messageId":"76","endLine":92,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":19,"column":55,"nodeType":"79","messageId":"80","endLine":19,"endColumn":57},"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","'Settest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"82","fix":"83"},"Update the dependencies array to be: [dispatch]",{"range":"84","text":"85"},[907,909],"[dispatch]"]